package com.covid.service.member;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.covid.exception.MemberNotFoundException;
import com.covid.model.AdharCard;
import com.covid.model.IdCard;
import com.covid.model.Member;
import com.covid.model.PanCard;
import com.covid.repo.IdCardRepo;
import com.covid.repo.MemberIdRepo;

@Service
public class MemberServiceImpl implements MemberService{

	@Autowired
	private MemberIdRepo dao;
	
	@Autowired
	private IdCardRepo IdDao;
	
	@Override
	public List<Member> getAllMember() throws MemberNotFoundException {
		List<Member> li=dao.findAll();
		if(li.size()>0)
			return li;
		else
			throw new MemberNotFoundException("No Members Available");
	}

	@Override
	public Member GetMemberById(Integer IdCardId) throws MemberNotFoundException {

		Optional<IdCard> idcard = IdDao.findById(IdCardId);
		if (idcard != null) {
			Member member = dao.findByIdCard(idcard.get());
			if (member != null) {
				
				return member;
			} else
				throw new MemberNotFoundException("Member not found  with the IdCard ID:" + IdCardId);
		} else
			throw new MemberNotFoundException("Member not found  with the IdCard ID:" + IdCardId);
	}

	@Override
	public Member GetMemberByAdharNo(Long AdharNo) throws MemberNotFoundException {
		AdharCard adhr =new AdharCard();
		adhr.setAdhaarNo(AdharNo);
		IdCard idcard = IdDao.findByAdharCard(adhr);
		Optional<IdCard> idcard1 = IdDao.findById(idcard.getId());
		if (idcard1.isPresent()) {
			Member member = dao.findByIdCard(idcard1.get());
			if (member != null)
				return member;
			else
				throw new MemberNotFoundException("Member does not exist with the AdharNo: " + AdharNo);
		} else
			throw new MemberNotFoundException("Member does not exist with the AdharNo : " + AdharNo);
	}

	@Override
	public Member GetMemberByPanNo(String PanNo) throws MemberNotFoundException {
         PanCard pn=new PanCard();
         pn.setPanNumber(PanNo);
		IdCard idcard = IdDao.findByPanCard(pn);
		if (idcard != null) {
			Optional<IdCard> id = IdDao.findById(idcard.getId());
			Member member = dao.findByIdCard(id.get());
			if (member != null)
				return member;
			else
				throw new MemberNotFoundException("Member does not exist with the PanNumber: " + PanNo);
		} else
			throw new MemberNotFoundException("Member does not exist with the PanNumber : " + PanNo);
	}

	@Override
	public Member AddMember(Member member) throws MemberNotFoundException {
		// TODO Auto-generated method stub
		
		Optional<IdCard> id = IdDao.findById(member.getIdCard().getId());
		if (id.isPresent()) {
			IdCard idcard = IdDao.findByAdharCard(member.getIdCard().getAdharCard());
			if (idcard == null)

			{
//				member.setVaccineRegistration(vacc.get());
				member.setDose1date(null);
				member.setDose2date(null);
				member.setDose1status(false);
				member.setDose2status(false);
				return dao.save(member);
			} else
				throw new MemberNotFoundException("Member is already present");
		}
		else
			throw new MemberNotFoundException("Member is already present");
		}

	@Override
	public Member UpdateMember(Member member) throws MemberNotFoundException {
		
		Optional<Member> mId = dao.findById(member.getMemberId());
		if (mId.isPresent()) {
			Member OldMember = mId.get();
			if (member.getIdCard() != null) {
				IdCard id = OldMember.getIdCard();
				if (member.getIdCard().getDob() != null)
					id.setDob(member.getIdCard().getDob());
				if (member.getIdCard().getCity() != null)
					id.setCity(member.getIdCard().getCity());
				if (member.getIdCard().getGender() != null)
					id.setGender(member.getIdCard().getGender());
				if (member.getIdCard().getAddress() != null)
					id.setAddress(member.getIdCard().getAddress());
				if (member.getIdCard().getPinCode() != null)
					id.setPinCode(member.getIdCard().getPinCode());
				if (member.getIdCard().getState() != null)
					id.setState(member.getIdCard().getState());

				if (member.getIdCard().getAdharCard() != null) {
					AdharCard adar = OldMember.getIdCard().getAdharCard();
					adar.setAdhaarNo(member.getIdCard().getAdharCard().getAdhaarNo());
				}

				if (member.getIdCard().getPanCard() != null) {
					PanCard pan = OldMember.getIdCard().getPanCard();
					pan.setPanNumber(member.getIdCard().getPanCard().getPanNumber());
				}
			}
			return dao.save(OldMember);
		} else
			throw new MemberNotFoundException("Member not found with the Member ID :" + member.getMemberId());
	}

	@Override
	public boolean DelteMember(Member member) throws MemberNotFoundException {
		// TODO Auto-generated method stub
		Optional<Member> mem = dao.findById(member.getMemberId());
		if (mem.isPresent()) {
			Member oldMember = mem.get();
			
			if (oldMember.getIdCard() != null)
				IdDao.delete(oldMember.getIdCard());
			
			dao.delete(oldMember);
			return true;
		} else
			throw new MemberNotFoundException("Member not found with the Member id & Name :" + member.toString());
	}

}
